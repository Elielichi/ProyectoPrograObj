/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visual;

import Controlador.ControladorCandidatos;
import Controlador.ControladorElecciones;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectoprograobj.Candidato;
import proyectoprograobj.Eleccion;

/**
 *
 * @author Usuario
 */
public class RegistroCandidatoEleccion extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(RegistroCandidatoEleccion.class.getName());

    /**
     * Creates new form RegistroCandidatoEleccion
     */
    private DefaultComboBoxModel<String> modeloComboElecciones;
    private DefaultComboBoxModel<String> modeloComboCandidatos;
    private ControladorElecciones controladorEleccion;
    private ControladorCandidatos controladorCandidato;
    public RegistroCandidatoEleccion() {
        initComponents();
        controladorEleccion = new ControladorElecciones();
        controladorCandidato = new ControladorCandidatos();
        llenarComboElecciones();
        llenarComboCandidatos();
        inicializarTabla();
        
    }
    
    public RegistroCandidatoEleccion(ControladorElecciones controladorEleccion, ControladorCandidatos controladorCandidatos) {
        initComponents();
        this.controladorEleccion = controladorEleccion;
        this.controladorCandidato = controladorCandidatos;
        llenarComboElecciones();
        llenarComboCandidatos();
        inicializarTabla();
        
    }
    
    public void limpiar(){
        this.cbxEleccion.setSelectedIndex(0);
        this.cbxCandidato.setSelectedIndex(0);
        
    }
    
    private void llenarComboElecciones(){
        modeloComboElecciones = new DefaultComboBoxModel<>();
        this.cbxEleccion.setModel(modeloComboElecciones);
        LinkedList<Eleccion> lista = controladorEleccion.getListaElecciones();
        for (Eleccion eleccion : lista) {
            modeloComboElecciones.addElement(eleccion.getNombre());
        }
    }
    
    private void llenarComboCandidatos(){
        modeloComboCandidatos = new DefaultComboBoxModel<>();
        this.cbxCandidato.setModel(modeloComboCandidatos);
        LinkedList<Candidato> lista = controladorCandidato.getListaCandidatos();
        for (Candidato candidato : lista) {
            modeloComboCandidatos.addElement(candidato.getNombre());
        }
    }
    
    DefaultTableModel modeloTabla;
    public void inicializarTabla(){
        modeloTabla = new DefaultTableModel();
        this.tblCandidatoEleccion.setModel(modeloTabla);
        modeloTabla.addColumn("Eleccion");
        modeloTabla.addColumn("Candidato");
    }
    
    private void mostrarCandidatosEleccionTabla() {
        inicializarTabla();
        String nombreEleccion = this.cbxEleccion.getSelectedItem().toString();
        Eleccion eleccionSeleccionada = null;

        for (Eleccion eleccion : controladorEleccion.getListaElecciones()) {
            if (eleccion.getNombre().equals(nombreEleccion)) {
                eleccionSeleccionada = eleccion;
                break;
            }
        }

        if (eleccionSeleccionada != null) {
            for (Candidato candidato : eleccionSeleccionada.getCandidatos()) {
                String[] fila = new String[2];
                fila[0] = eleccionSeleccionada.getNombre();
                fila[1] = candidato.getNombre() + " " + candidato.getApellidos();
                modeloTabla.addRow(fila);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCandidatoEleccion = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        cbxEleccion = new javax.swing.JComboBox<>();
        cbxCandidato = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registrar candidato a una eleccion");

        jLabel2.setText("Elegir eleccion:");

        jLabel3.setText("Asignar candidato");

        tblCandidatoEleccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCandidatoEleccion);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        cbxEleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEleccionActionPerformed(evt);
            }
        });

        cbxCandidato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCandidatoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxEleccion, 0, 90, Short.MAX_VALUE)
                                    .addComponent(cbxCandidato, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 75, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnAgregar)
                    .addComponent(cbxEleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxCandidato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar))
                .addGap(33, 33, 33)
                .addComponent(btnCancelar)
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        String nombreEleccion = this.cbxEleccion.getSelectedItem().toString();
        String nombreCandidato = this.cbxCandidato.getSelectedItem().toString();
        
        Eleccion eleccionSeleccionada = null;
        for (Eleccion eleccion : controladorEleccion.getListaElecciones()) {
            if (eleccion.getNombre().equals(nombreEleccion)) {
                eleccionSeleccionada = eleccion;
                break;
            }
        }
        
        Candidato candidatoSeleccionado = null;
        for (Candidato candidato : controladorCandidato.getListaCandidatos()) {
            if (candidato.getNombre().equals(nombreCandidato)) {
                candidatoSeleccionado = candidato;
                break;
            }
        }
        
        if (eleccionSeleccionada != null && candidatoSeleccionado != null) {
            boolean yaExiste = false;
            for (Candidato candidato : eleccionSeleccionada.getCandidatos()) {
                if (candidato.getDni().equals(candidatoSeleccionado.getDni())) {
                    yaExiste = true;
                    break;
                }
            }
            if (!yaExiste) {
                candidatoSeleccionado.setEleccion(eleccionSeleccionada); 
                eleccionSeleccionada.getCandidatos().add(candidatoSeleccionado);
                JOptionPane.showMessageDialog(this, "Se registró correctamente la información", "", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Este candidato ya fue registrado en esta elección", "", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error en el proceso de registro.", "", JOptionPane.ERROR_MESSAGE);
        }
        inicializarTabla();
        mostrarCandidatosEleccionTabla();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cbxEleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEleccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxEleccionActionPerformed

    private void cbxCandidatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCandidatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCandidatoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new RegistroCandidatoEleccion().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cbxCandidato;
    private javax.swing.JComboBox<String> cbxEleccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCandidatoEleccion;
    // End of variables declaration//GEN-END:variables
}
